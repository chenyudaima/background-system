#项目部署路径不在server.servlet.context-path配置，在WebMvcConfig类中配置

#服务占用端口
server.port=8080

#日志配置
logging.config=classpath:logback-spring.xml

#访问当前项目端口出现404错误,直接抛出NoHandlerFoundException,用于全局异常处理
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

#mysql
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/background_system?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=123456

#Druid数据库连接池
# 初始化时建立物理连接的个数。默认0
spring.datasource.druid.initial-size=1
# 连接池最大数量，默认8
spring.datasource.druid.max-active=10
# 连接池最小数量
spring.datasource.druid.min-idle=1
# 获取连接时最大等待时间(毫秒)
spring.datasource.druid.max-wait=2000
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements=false
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=-1



# 启用Druid内置的Filter，会使用默认的配置。可自定义配置，见下方的各个filter节点。
spring.datasource.druid.filters=stat,wall
## StatViewServlet监控器。开启后，访问http://ip:port/druid/index.html
# 开启 StatViewServlet，即开启监控功能
spring.datasource.druid.stat-view-servlet.enabled=true
# 访问监控页面时登录的账号
spring.datasource.druid.stat-view-servlet.login-username=root
spring.datasource.druid.stat-view-servlet.login-password=123456
# Servlet的映射地址，不填写默认为"/druid/*"。如填写其它地址，访问监控页面时，要使用相应的地址
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
# 是否允许重置数据（在页面的重置按钮）。（停用后，依然会有重置按钮，但重置后不会真的重置数据）
spring.datasource.druid.stat-view-servlet.reset-enable=false
# 监控页面访问白名单。默认为127.0.0.1。与黑名单一样，支持子网掩码，如128.242.127.1/24。多个ip用英文逗号分隔
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,localhost
# 监控页面访问黑名单
spring.datasource.druid.stat-view-servlet.deny=18.2.1.3
# 开启SQL防火墙功能
spring.datasource.druid.filter.wall.enabled=true
# 允许执行Select查询操作
spring.datasource.druid.filter.wall.config.select-allow=true
#允许执行delete操作
spring.datasource.druid.filter.wall.config.delete-allow=true
# 不允许创建表
spring.datasource.druid.filter.wall.config.create-table-allow=false



#mybatis-plus
mybatis-plus.mapper-locations=classpath*:mapper/*.xml
mybatis-plus.type-aliases-package=com.chenyudaima.model
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
#是否开启启动LOGO
mybatis-plus.global-config.banner=false

#redis
spring.redis.host=127.0.0.1
spring.redis.port=6379
# Redis数据库索引（默认为0）
spring.redis.database=0
spring.redis.password=123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=10
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=1000


#文件上传大小
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB
#文件上传类型白名单
servlet.multipart.whitelist=pdf,txt,jpg,png
#上传文件的临时保存位置
spring.servlet.multipart.location=D:/temporary


#自定义属性
#雪花算法工作机器id
snowflake.config.machine-id=0
#雪花算法数据中心id
snowflake.config.datacenter-id=0
#jwt 加密的key
jwt.config.sign-key=chenyudaima
#jwt 签发者
jwt.config.issuer=chenyudaima

#token过期时间 单位（分钟）
jwt.config.expiration=1200